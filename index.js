require('dotenv').config();
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const TelegramBot = require('node-telegram-bot-api');
const mongoose = require('mongoose');
const path = require('path');

const token = process.env.BOT_TOKEN;
const adminChatId = process.env.ADMIN_CHAT_ID;
const domain = process.env.DOMAIN;
const port = process.env.PORT || 3000;

if (!token || !adminChatId) {
  console.error('–û—à–∏–±–∫–∞: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ BOT_TOKEN –∏ ADMIN_CHAT_ID');
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });
const app = express();

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(cors());
app.use(express.static('public'));

// –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
const users = {}; // { telegramUsername: chatId }
const pendingBookings = {}; // { telegramUsername: {service, staff, date, time} }

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;

  if (username) {
    users[username] = chatId;
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å chatId ${chatId}`);
  }

  bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Leo Beauty! ‚ú®\n\n–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à —Å–∞–π—Ç.`);
});

app.post('/api/pending-booking', async (req, res) => {
  const { service, staff, date, time, userId } = req.body;

  if (!service || !staff || !date || !time || !userId) {
    return res.status(400).json({ success: false, error: '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
  pendingBookings[userId] = { service, staff, date, time };

  return res.json({ success: true, message: '–ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ Telegram –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.' });
});

app.post('/api/booking', async (req, res) => {
  try {
    const { service, staff, date, time, telegramUsername } = req.body;

    if (!service || !staff || !date || !time || !telegramUsername) {
      return res.status(400).json({ success: false, error: '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
    }

    const userChatId = users[telegramUsername];

    if (!userChatId) {
      return res.status(400).json({ success: false, error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –≤ Telegram' });
    }

    const adminMessage = `
üÜï –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å!
–£—Å–ª—É–≥–∞: ${service}
–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç: ${staff}
–î–∞—Ç–∞: ${date}
–í—Ä–µ–º—è: ${time}
–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @${telegramUsername}
    `;
    await bot.sendMessage(adminChatId, adminMessage);

    const userMessage = `
‚úÖ –í–∞—à –≤–∏–∑–∏—Ç –≤ Leo Beauty –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!

‚ú® –£—Å–ª—É–≥–∞: ${service}
üßë‚Äçüíº –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç: ${staff}
üìÜ –î–∞—Ç–∞: ${date}
üïí –í—Ä–µ–º—è: ${time}

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä! –ñ–¥—ë–º –≤–∞—Å! üå∏
    `;
    await bot.sendMessage(userChatId, userMessage);

    return res.json({ success: true, message: '–ó–∞–ø–∏—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    return res.status(500).json({ success: false, error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

app.listen(port, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
  console.log(`–î–æ–º–µ–Ω: ${domain}`);
});

bot.on('polling_error', (error) => {
  console.error('–û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞:', error);
});
