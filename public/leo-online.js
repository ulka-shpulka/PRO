// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –≤ —Ñ–∞–π–ª leo-online.js (–ø–æ–ª–Ω–∞—è –∑–∞–º–µ–Ω–∞)

// –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–∫—Ä–∏–ø—Ç–∞
console.log("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ì–†–£–ó–ö–ò –°–ö–†–ò–ü–¢–ê ===");
console.log("–°–∫—Ä–∏–ø—Ç leo-online.js –∑–∞–≥—Ä—É–∂–µ–Ω");
console.log("document.readyState:", document.readyState);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
function checkData() {
  console.log("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–ê–ù–ù–´–• ===");
  const service = localStorage.getItem("selectedService");
  const staff = localStorage.getItem("selectedEmployee");
  const datetime = localStorage.getItem("selectedDatetime");
  const userId = localStorage.getItem("telegramUserId");
  
  console.log("Service:", service, service ? "OK" : "MISSING");
  console.log("Staff:", staff, staff ? "OK" : "MISSING");
  console.log("Datetime:", datetime, datetime ? "OK" : "MISSING");
  console.log("User ID:", userId, userId ? "OK" : "MISSING");

  // –ï—Å–ª–∏ userId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  if (!userId) {
    console.log("‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ userId –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");
    localStorage.setItem("telegramUserId", "TEST_USER_" + Math.floor(Math.random() * 1000000));
  }

  return {
    service: service || null,
    staff: staff || null,
    datetime: datetime || null,
    userId: localStorage.getItem("telegramUserId") || null
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
function checkDOMElements() {
  console.log("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê DOM –≠–õ–ï–ú–ï–ù–¢–û–í ===");
  
  const elements = {
    serviceElement: document.getElementById("chosen-service"),
    staffElement: document.getElementById("chosen-staff"),
    timeElement: document.getElementById("chosen-time"),
    submitBtn: document.getElementById("submitBtn")
  };
  
  console.log("Service element:", elements.serviceElement ? "–ù–∞–π–¥–µ–Ω" : "–ù–ï –ù–ê–ô–î–ï–ù");
  console.log("Staff element:", elements.staffElement ? "–ù–∞–π–¥–µ–Ω" : "–ù–ï –ù–ê–ô–î–ï–ù");
  console.log("Time element:", elements.timeElement ? "–ù–∞–π–¥–µ–Ω" : "–ù–ï –ù–ê–ô–î–ï–ù");
  console.log("Submit button:", elements.submitBtn ? "–ù–∞–π–¥–µ–Ω" : "–ù–ï –ù–ê–ô–î–ï–ù");
  
  if (elements.submitBtn) {
    console.log("Button attributes:", {
      id: elements.submitBtn.id,
      disabled: elements.submitBtn.disabled,
      classList: Array.from(elements.submitBtn.classList),
      onclick: elements.submitBtn.onclick ? "—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç" : "–û–¢–°–£–¢–°–¢–í–£–ï–¢",
      innerHTML: elements.submitBtn.innerHTML
    });
  }
  
  return elements;
}

// –§—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
function formatDateTime(datetimeStr) {
  if (!datetimeStr) return "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
  
  try {
    const dt = new Date(datetimeStr);
    if (isNaN(dt.getTime())) {
      console.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞:", datetimeStr);
      return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞";
    }
    
    const day = dt.getDate().toString().padStart(2, '0');
    const month = (dt.getMonth() + 1).toString().padStart(2, '0');
    const year = dt.getFullYear();
    const hours = dt.getHours().toString().padStart(2, '0');
    const minutes = dt.getMinutes().toString().padStart(2, '0');
    
    return `${day}.${month}.${year} –≤ ${hours}:${minutes}`;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã:", error);
    return "–û—à–∏–±–∫–∞ –¥–∞—Ç—ã";
  }
}

// –§—É–Ω–∫—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function goTo(page) {
  console.log(`–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${page}.html`);
  
  if (page === 'services') {
    localStorage.removeItem("selectedEmployee");
    localStorage.removeItem("selectedDatetime");
  }
  if (page === 'staff') {
    localStorage.removeItem("selectedDatetime");
  }
  
  window.location.href = `${page}.html`;
}

// –û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–∏
function prepareBookingData() {
  const service = localStorage.getItem("selectedService");
  const staff = localStorage.getItem("selectedEmployee");
  const datetime = localStorage.getItem("selectedDatetime");
  const userId = localStorage.getItem("telegramUserId");
  
  if (!service || !staff || !datetime || !userId) {
    console.error("‚ùå –ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–æ—Å—Ç—É–ø–Ω—ã");
    return null;
  }
  
  let date, time;
  try {
    [date, time] = datetime.split("T");
    if (!date || !time) {
      console.warn("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥");
      const dt = new Date(datetime);
      date = `${dt.getFullYear()}-${(dt.getMonth() + 1).toString().padStart(2, '0')}-${dt.getDate().toString().padStart(2, '0')}`;
      time = `${dt.getHours().toString().padStart(2, '0')}:${dt.getMinutes().toString().padStart(2, '0')}`;
    }
  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞—Ç—ã:", error);
    return null;
  }
  
  return { service, staff, date, time, userId };
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
function sendBookingData(service, staff, date, time, userId) {
  console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", { service, staff, date, time, userId });
  
  const apiUrl = "https://pro-1-qldl.onrender.com/api/booking";
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º-–∞—É—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log("–ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞...");
  
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      fetch(apiUrl, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Bearer simple-token" // –ü—Ä–æ—Å—Ç–æ–π —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        },
        body: JSON.stringify({ service, staff, date, time, userId })
      })
      .then(response => {
        console.log("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.status);
        if (!response.ok) {
          throw new Error(`HTTP –æ—à–∏–±–∫–∞: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        console.log("–î–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
        resolve(data);
      })
      .catch(error => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error);
        reject(error);
      });
    }, 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  });
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø–∏—Å–∏
window.submitVisit = function() {
  console.log("=== –ù–ê–ß–ê–õ–û –í–´–ü–û–õ–ù–ï–ù–ò–Ø submitVisit() ===");
  
  // 1. –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ
  const submitBtn = document.getElementById("submitBtn");
  if (submitBtn) {
    submitBtn.disabled = true;
    submitBtn.classList.add("disabled");
    console.log("–ö–Ω–æ–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞");
  } else {
    console.error("‚ùå –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM");
  }
  
  // 2. –ì–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
  const bookingData = prepareBookingData();
  if (!bookingData) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–ø–∏—Å–∏.");
    if (submitBtn) {
      submitBtn.disabled = false;
      submitBtn.classList.remove("disabled");
    }
    return;
  }
  
  console.log("–î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≥–æ—Ç–æ–≤—ã:", bookingData);
  
  // 3. –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const confirmed = confirm(
    "üõé –ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞.\n\n–ù–∞–∂–º–∏—Ç–µ OK, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏."
  );
  
  if (!confirmed) {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –∑–∞–ø–∏—Å—å");
    if (submitBtn) {
      submitBtn.disabled = false;
      submitBtn.classList.remove("disabled");
    }
    return;
  }
  
  // 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  if (submitBtn) {
    submitBtn.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";
  }
  
  console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...");
  
  // 5. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
  sendBookingData(
    bookingData.service, 
    bookingData.staff, 
    bookingData.date, 
    bookingData.time, 
    bookingData.userId
  )
  .then(response => {
    console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:", response);
    if (response.success) {
      alert("‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞! –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram.");
    } else {
      throw new Error(response.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
    }
  })
  .catch(error => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏:", error);
    alert("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ Telegram.");
  })
  .finally(() => {
    console.log("–§–∏–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞...");
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram –±–æ—Ç–∞
    try {
      window.open("https://t.me/MLfeBot", "_blank");
    } catch (e) {
      console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å Telegram:", e);
    }
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    localStorage.clear();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    const elements = checkDOMElements();
    if (elements.serviceElement) elements.serviceElement.textContent = "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
    if (elements.staffElement) elements.staffElement.textContent = "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
    if (elements.timeElement) elements.timeElement.textContent = "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
    
    if (submitBtn) {
      submitBtn.disabled = true;
      submitBtn.classList.add("disabled");
      submitBtn.textContent = "–û–§–û–†–ú–ò–¢–¨ –í–ò–ó–ò–¢";
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    console.log("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ leo.html —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã");
    setTimeout(() => {
      console.log("–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ leo.html");
      window.location.href = "leo.html";
    }, 2000);
  });
  
  console.log("=== –ö–û–ù–ï–¶ –í–´–ü–û–õ–ù–ï–ù–ò–Ø submitVisit() ===");
};

// –§—É–Ω–∫—Ü–∏–∏ –≤—ã–±–æ—Ä–∞
function selectService(serviceName) {
  console.log("–í—ã–±—Ä–∞–Ω–∞ —É—Å–ª—É–≥–∞:", serviceName);
  localStorage.setItem("selectedService", serviceName);
  goTo('staff');
}

function selectStaff(staffName) {
  console.log("–í—ã–±—Ä–∞–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫:", staffName);
  localStorage.setItem("selectedEmployee", staffName);
  goTo('datetime');
}

function selectDateTime(datetime) {
  console.log("–í—ã–±—Ä–∞–Ω—ã –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:", datetime);
  localStorage.setItem("selectedDatetime", datetime);
  goTo('leo-online');
}

function getTelegramUserId() {
  return localStorage.getItem('telegramUserId');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", function() {
  console.log("=== DOMContentLoaded –°–û–ë–´–¢–ò–ï ===");
  
  // –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  const data = checkData();
  const elements = checkDOMElements();
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  if (elements.serviceElement) elements.serviceElement.textContent = data.service || "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
  if (elements.staffElement) elements.staffElement.textContent = data.staff || "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
  if (elements.timeElement) elements.timeElement.textContent = data.datetime ? formatDateTime(data.datetime) : "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
  if (elements.submitBtn) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
    const isFormComplete = data.service && data.staff && data.datetime && data.userId;
    
    console.log("–§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é:", isFormComplete);
    
    elements.submitBtn.disabled = !isFormComplete;
    
    if (elements.submitBtn.disabled) {
      elements.submitBtn.classList.add("disabled");
    } else {
      elements.submitBtn.classList.remove("disabled");
    }
    
    // –í–ê–ñ–ù–û! –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –Ω–∞–ø—Ä—è–º—É—é
    // (–º–æ–∂–µ—Ç –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –∏–∑-–∑–∞ –∞—Ç—Ä–∏–±—É—Ç–∞ onclick –≤ HTML)
    if (!elements.submitBtn.onclick) {
      console.warn("‚ö†Ô∏è –£ –∫–Ω–æ–ø–∫–∏ –Ω–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ onclick, –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π");
      elements.submitBtn.onclick = window.submitVisit;
    }
  }
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–≥–Ω–æ—Å—Ç: –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞?
  console.log("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–õ–ò–ö–ê–ë–ï–õ–¨–ù–û–°–¢–ò ===");
  if (elements.submitBtn) {
    console.log("–ö–Ω–æ–ø–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–∂–∞—Ç–∞:", !elements.submitBtn.disabled);
    console.log("–°–≤–æ–π—Å—Ç–≤–æ onclick –∫–Ω–æ–ø–∫–∏:", elements.submitBtn.onclick ? "–ù–ê–ó–ù–ê–ß–ï–ù–û" : "–û–¢–°–£–¢–°–¢–í–£–ï–¢");
    
    // –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
    console.log("–ß—Ç–æ–±—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –≤—Ä—É—á–Ω—É—é, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏: document.getElementById('submitBtn').click()");
  }
});

// –†–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ø–æ—Å–æ–±: –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
document.addEventListener('click', function(event) {
  if (event.target && event.target.id === 'submitBtn') {
    console.log("–ö–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ–±–Ω–∞—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ!");
    // –ù–µ –≤—ã–∑—ã–≤–∞–µ–º submitVisit –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ —É –∫–Ω–æ–ø–∫–∏ —É–∂–µ –µ—Å—Ç—å onclick –≤ HTML
  }
});

// –í—ã–≤–æ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
console.log("=== –°–ö–†–ò–ü–¢ –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–ì–†–£–ñ–ï–ù ===");
console.log("–î–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∑–∞–ø–∏—Å–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: window.submitVisit()");