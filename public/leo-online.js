document.addEventListener("DOMContentLoaded", function () {
  const service = localStorage.getItem("selectedService");
  const staff = localStorage.getItem("selectedEmployee");
  const datetime = localStorage.getItem("selectedDatetime");
  const userId = localStorage.getItem("telegramUserId");
  
  console.log("Service:", service);
  console.log("Staff:", staff);
  console.log("Datetime:", datetime);
  console.log("User ID:", userId);
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  document.getElementById("chosen-service").textContent = service || "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
  document.getElementById("chosen-staff").textContent = staff || "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
  
  // –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –≤ HTML –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ "chosen-time", 
  // –Ω–æ –≤–ª–æ–∂–µ–Ω –≤ "chosen-datetime"
  document.getElementById("chosen-time").textContent = datetime ? formatDateTime(datetime) : "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
  
  const submitBtn = document.getElementById("submitBtn");
  
  // –í–∞–∂–Ω–æ! –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –µ—Å—Ç—å –≤ HTML
  // –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
  
  // –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
  const isFormComplete = service && staff && datetime && userId;
  submitBtn.disabled = !isFormComplete;
  console.log("Form complete:", isFormComplete);
  
  if (submitBtn.disabled) {
    submitBtn.classList.add("disabled");
  } else {
    submitBtn.classList.remove("disabled");
  }
});

function formatDateTime(datetimeStr) {
  try {
    // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç "–¥–¥.–º–º.–≥–≥–≥–≥ –≤ —á—á:–º–º"
    const dt = new Date(datetimeStr);
    if (isNaN(dt.getTime())) {
      console.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞:", datetimeStr);
      return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞";
    }
    const day = dt.getDate().toString().padStart(2, '0');
    const month = (dt.getMonth() + 1).toString().padStart(2, '0');
    const year = dt.getFullYear();
    const hours = dt.getHours().toString().padStart(2, '0');
    const minutes = dt.getMinutes().toString().padStart(2, '0');
    return `${day}.${month}.${year} –≤ ${hours}:${minutes}`;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞—Ç—ã:", error);
    return "–û—à–∏–±–∫–∞ –¥–∞—Ç—ã";
  }
}

function goTo(page) {
  if (page === 'services') {
    localStorage.removeItem("selectedEmployee");
    localStorage.removeItem("selectedDatetime");
  }
  if (page === 'staff') {
    localStorage.removeItem("selectedDatetime");
  }
  window.location.href = `${page}.html`;
}

function submitVisit() {
  console.log("–§—É–Ω–∫—Ü–∏—è submitVisit –≤—ã–∑–≤–∞–Ω–∞");
  
  const service = localStorage.getItem("selectedService");
  const staff = localStorage.getItem("selectedEmployee");
  const datetime = localStorage.getItem("selectedDatetime");
  const userId = localStorage.getItem("telegramUserId");
  
  console.log("Submitting Visit with data:", { service, staff, datetime, userId });
  
  if (!service || !staff || !datetime || !userId) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–ø–∏—Å–∏.");
    return;
  }
  
  const confirmed = confirm(
    "üõé –ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞.\n\n–ù–∞–∂–º–∏—Ç–µ OK, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏."
  );
  
  if (!confirmed) return;
  
  const submitBtn = document.getElementById("submitBtn");
  submitBtn.disabled = true;
  submitBtn.classList.add("disabled");
  submitBtn.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";
  
  let date, time;
  try {
    [date, time] = datetime.split("T");
    if (!date || !time) {
      console.error("–û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏:", datetime);
      const dt = new Date(datetime);
      date = `${dt.getFullYear()}-${(dt.getMonth() + 1).toString().padStart(2, '0')}-${dt.getDate().toString().padStart(2, '0')}`;
      time = `${dt.getHours().toString().padStart(2, '0')}:${dt.getMinutes().toString().padStart(2, '0')}`;
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–∏:", error);
    date = "–æ—à–∏–±–∫–∞ –¥–∞—Ç—ã";
    time = "–æ—à–∏–±–∫–∞ –≤—Ä–µ–º–µ–Ω–∏";
  }
  
  console.log("Processed date:", date, "time:", time);
  
  sendBookingData(service, staff, date, time, userId)
    .then((response) => {
      console.log("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response);
      if (response.success) {
        alert("‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞! –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram.");
      } else {
        throw new Error(response.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
      }
    })
    .catch((error) => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:", error);
      alert("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ Telegram.");
    })
    .finally(() => {
      try {
        window.open("https://t.me/MLfeBot", "_blank");
        localStorage.clear();
        
        document.getElementById("chosen-service").textContent = "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
        document.getElementById("chosen-staff").textContent = "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
        document.getElementById("chosen-time").textContent = "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
        
        submitBtn.disabled = true;
        submitBtn.classList.add("disabled");
        submitBtn.textContent = "–û–§–û–†–ú–ò–¢–¨ –í–ò–ó–ò–¢";
        
        setTimeout(() => {
          window.location.href = "leo.html";
        }, 2000);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤ –±–ª–æ–∫–µ finally:", error);
      }
    });
}

function sendBookingData(service, staff, date, time, userId) {
  console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", { service, staff, date, time, userId });
  const apiUrl = "https://pro-1-qldl.onrender.com/api/booking";
  
  return fetch(apiUrl, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      // –î–æ–±–∞–≤–∏–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è API
      "Authorization": "Bearer " + (localStorage.getItem("authToken") || "default-token")
    },
    body: JSON.stringify({ service, staff, date, time, userId })
  })
  .then((response) => {
    console.log("–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:", response.status);
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    return response.json();
  })
  .catch(error => {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error);
    throw error;
  });
}

function getTelegramUserId() {
  return localStorage.getItem('telegramUserId');
}

function selectService(serviceName) {
  localStorage.setItem("selectedService", serviceName);
  goTo('staff');
}

function selectStaff(staffName) {
  localStorage.setItem("selectedEmployee", staffName);
  goTo('datetime');
}

function selectDateTime(datetime) {
  localStorage.setItem("selectedDatetime", datetime);
  goTo('leo-online');
}